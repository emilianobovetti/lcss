#!/bin/bash

if [ ! -d "$1" ]; then
    echo "$(basename $0) /path/to/fasta/dir"
    exit 1
fi

. "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/mk-env" --make

norm_strings="$(normalize-fasta "$1")"
raw_lcss="$(echo "$norm_strings" | "$LCSS_BIN")"
lcss_list="$(echo "$raw_lcss" | lcss-to-list --min-common 10)"

#
# Match lcss in norm_strings witch coloring
#
ccode=1
regexp=
colors=

#while read sub; do
#    if [ -z "$regexp" ]; then
#        regexp="($sub)"
#        colors="$ccode"
#    else
#        # Skip black & white (codes 15 and 16)
#        if [ "$ccode" -eq 15 ]; then
#            ccode=17
#        fi
#
#        if [ "$ccode" -ge 230 ]; then
#            echo "too much substrings, cannot pick another color code" 1>&2
#            exit 1
#        fi
#
#        regexp="$regexp|($sub)"
#        colors="$colors,$ccode"
#    fi
#
#    ccode=$((ccode + 1))
#done <<< "$lcss_list"
#
#echo "matching substrings in given sequences:"
#echo "$norm_strings" | colout "$regexp" "$colors" | awk '{ print $0, "\n\n---\n" }'

#
# Distance between multiple pairs
#
echo "==="

while read pair; do
    distances="$(echo "$norm_strings" | distances-between-sub-pair $pair)"

    match_count="$(echo "$distances" | wc -l)"
    min_dis="$(echo "$distances" | head -n 1)"
    max_dis="$(echo "$distances" | tail -n 1)"

    dist_diff="$(( min_dis - max_dis ))"

    if [ "$match_count" -gt 1 ] && [ "$max_dis" -lt 1500 ]; then
        reg1="$(echo "$norm_strings" | sub-pair-to-regex $pair)"
        reg2="$(echo "$norm_strings" | sub-pair-to-regex --invert $pair)"

        if [ -z "$reg1" ]; then
            regexp="$reg2"
        elif [ -z "$reg2" ]; then
            regexp="$reg1"
        elif [ "$(echo "$reg1" | wc -m)" -lt "$(echo "$reg2" | wc -m)" ]; then
            regexp="$reg1"
        else
            regexp="$reg2"
        fi

        echo "in $match_count strings [$min_dis, $max_dis]: $regexp"
        echo
    fi
done <<< "$(echo "$raw_lcss" | lcss-to-list --min-common 44 | mk-pairs)"

echo "==="
