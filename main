#!/bin/bash

if [ ! -d "$1" ]; then
    echo "$(basename $0) /path/to/fasta/dir"
    exit 1
fi

. "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/env" --make

norm_strings="$(normalize-fasta "$1")"

#
#echo "isn't that cool?"
#echo "$norm_strings" | distance-between-sub-pair tgatgcgtgatat gtaaacgccttca
#echo "==="
#
#echo "anyway, let's do the lcss"
#echo "==="
#

lcss="$(echo "$norm_strings" | "$LCSS_BIN" | lcss-to-list --min-common 10)"

#
#rep_in_lcss="$(echo "$lcss" | "$LCSS_BIN" | lcss-to-list --min-common 2 | filter-by-length --min 3)"
#
#regexp=
#
#while read sub; do
#    if [ -z "$regexp" ]; then
#        regexp="$sub"
#    else
#        regexp="$regexp|$sub"
#    fi
#done <<< "$rep_in_lcss"
#
#echo "repetitions in substrings:"
#grep -E --color=always "$regexp" <<< "$lcss"
#echo "==="
#
#short_lcss="$(echo "$lcss" | filter-by-length --min 3 --max 100)"
#

ccode=1
regexp=
colors=

while read sub; do
    if [ -z "$regexp" ]; then
        regexp="($sub)"
        colors="$ccode"
    else
        # Skip black & white (codes 15 and 16)
        if [ "$ccode" -eq 15 ]; then
            ccode=17
        fi

        if [ "$ccode" -ge 230 ]; then
            echo "too much substrings, cannot pick another color code" 1>&2
            exit 1
        fi

        regexp="$regexp|($sub)"
        colors="$colors,$ccode"
    fi

    ccode=$((ccode + 1))
done <<< "$lcss"

echo "matching substrings in given sequences:"
echo "$norm_strings" | colout "$regexp" "$colors" | awk '{ print $0, "\n\n---\n" }'

#
#grep -E --color=always "$regexp" <<< "$norm_strings" | awk '{ print $0, "\n\n---\n" }'
#
