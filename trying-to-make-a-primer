# 0
find primer with desired melting point

./utils/normalize-fasta ../sequenze |
./build/lcss --melting-point 60 --range 2 |
./utils/res-to-list --min-common 37

result
------
gcgaaacagcagaagtgagg
gcagtagacgaaatcgaatc
ggaaatctcgttccgtatcg
ccccgcagttactggattaa
cgaaacagcagaagtgagg
agcagtagacgaaatcgaatc
aagcagtagacgaaatcgaatc

============================================================
============================================================

1. gcgaaacagcagaagtgagg

./utils/normalize-fasta ../sequenze |
tre-agrep --color -6 -D 9 -I 9 -S 1 gcgaaacagcagaagtgagg |
grep -o $'\E\\[01;31m.*\E\\[00m' | sort | uniq

gaaaaacggcagaactgaaa
gcgaaacagcagaagtgagg
gcgagacagcattattgtcg
gcgatacgacggaagtgata
gtgaagcagaagaagaggag

| ./utils/regex-compiler

# d = 331776
g[act][ag]a[agt][ag]c[ag][ag][ac][ag][gt][at]a[cgt][at]g[agt][acgt][ag] # 43

gcgaaacagcagaagtgagg
gcgagacagcattattgtcg
gcgatacgacggaagtgata
gtgaagcagaagaagaggag

# d = 73728
g[ct]ga[agt][ag]c[ag][ag][ac][ag][gt][at]a[gt][at]g[agt][acgt][ag] # 41

gcgaaacagcagaagtgagg
gcgagacagcattattgtcg
gcgatacgacggaagtgata

# d = 2304
gcga[agt]ac[ag][ag]c[ag][gt][at]a[gt]tg[at][cgt][ag] # 39

============================================================

2. gcagtagacgaaatcgaatc

./utils/normalize-fasta ../sequenze |
tre-agrep --color -6 -D 9 -I 9 -S 1 gcagtagacgaaatcgaatc |
grep -o $'\E\\[01;31m.*\E\\[00m' | sort | uniq |
./utils/regex-compiler

# d = 3072
gc[at][ag][ct]a[ag]a[ct][gt]aaa[ct][ac][gt][ac]at[cgt] # 39

============================================================

3. ggaaatctcgttccgtatcg

# d = 64
[cg]gaaatc[at][ct]gttc[ct]g[gt][at]tcg # 38
# d = 1536
[cg][ag]aaa[gt]c[at][cgt][gt][ct]tc[ct]g[gt][at]tcg # 39
# d = 27648
[cg][ag]aa[at][gt]c[act][cgt][gt][act]t[ct][ct]g[gt][at][at]cg # 41

============================================================

4. ccccgcagttactggattaa

# d = 41472
[ct][ct][cgt][cg]gca[agt][agt][gt]ac[at]g[cg][ac][agt][ct][ac]a # 43

============================================================

5. cgaaacagcagaagtgagg

# d = 13_436_928
[act][acg]a[at][agt][ac][acg][acg][ac][acg][ag][acg]a[acgt][at][cg][acgt][agt][ag] # 47

printf "cgaaacagcagaagtgagg\ncgaaaccgccagagtggtg" | ./utils/regex-compiler


cgaaacagcagaagtgagg,aaaaacggcagaactgaaa
cgaaacagcagaagtgagg,ccaaaaaccaggattgtgg
cgaaacagcagaagtgagg,cgaaacagcagaagtgagg
cgaaacagcagaagtgagg,cgaaaccgccagagtggtg
cgaaacagcagaagtgagg,cgaagaagcagcaatccgg
cgaaacagcagaagtgagg,cgaatcaccagaaaagtga
cgaaacagcagaagtgagg,cgatacgacggaagtgata
cgaaacagcagaagtgagg,tgaagcagaagaagaggag

============================================================
============================================================

# 1.1 gcgaaacagcagaagtgagg
./utils/normalize-fasta ../sequenze |
#                         primer with desired melting point
#       min to match 48/48 strings  |
#                  v                v
tre-agrep --color -6 gcgaaacagcagaagtgagg |
grep -o $'\E\\[01;31m.*\E\\[00m' |
sort | uniq

result
------
gcgaaacagcagaagtgagg    37
gcgcaaaagcagaatgagc     5
actaaacagcatggacaggagg  1
gcgatactgctgaaggagg     1
gcgattcgcaggagtgagc     1
gcgcacacagaagagggg      1
gtgaaaccgatacgtgaga     2
gtgaagcagaagaagagg      2

# 2.1
keep gcgaaacagcagaagtgagg (found in 36 strings)
and  gcgcaaaagcagaatgagc (found in 5)

gcgaaacagcagaagtgagg
gcgcaaaagcagaa-tgagc

# d = 16
gcg[ac]aa[ac]agcagaag?tgag[cg] # 42

gcgaaaaagcagaatgagc     56
gcgaaaaagcagaatgagg     56
gcgaaacagcagaatgagc     58
gcgaaacagcagaatgagg     58
gcgcaaaagcagaatgagc     58
gcgcaaaagcagaatgagg     58
gcgaaaaagcagaagtgagc    60
gcgaaaaagcagaagtgagg    60
gcgcaacagcagaatgagc     60
gcgcaacagcagaatgagg     60
gcgaaacagcagaagtgagc    62
gcgaaacagcagaagtgagg    62
gcgcaaaagcagaagtgagc    62
gcgcaaaagcagaagtgagg    62
gcgcaacagcagaagtgagc    64
gcgcaacagcagaagtgagg    64

# d = 2048
g[ct]g[ac]a[ag][ac][ac]g[ac]a?[gt]a[ac]g?t?gag # 45

============================================================

# 1.2 gcagtagacgaaatcgaatc

./utils/normalize-fasta ../sequenze | tre-agrep -5 -c gcagtagacgaaatcgaatc # 45
./utils/normalize-fasta ../sequenze | tre-agrep -6 -c gcagtagacgaaatcgaatc # 48

./utils/normalize-fasta ../sequenze |
tre-agrep --color -6 gcagtagacgaaatcgaatc |
grep -o $'\E\\[01;31m.*\E\\[00m' | sort | uniq

./utils/normalize-fasta ../sequenze | grep -c gcagtagacgaaatcgaatc # 37

result
------
gcagtagacgaaatcgaatc    37
gcagtaatgaaagccatc      18

gagcagacagcaatgaatg     2
gcagagacaatgaaac        2
gcaggcgacgatattaatc     1
gcagtggaaagcgcacc       1
gcagttgcgaataatc        1
gcagtttgatgaaatcaata    1
gcatagctgaaatcaacatc    2
gcattcggaatcaatc        1
gcgtaaacgaatagcatc      1
tcagcagagaaagcggatc     1

# 2.2
keep gcagtagacgaaatcgaatc and gcagtaatgaaagccatc

gcagtagacgaaatcgaatc
gcagta-atgaaagcc-atc

printf "gcagtagacgaaatcgaatc\ngcagta-atgaaagcc-atc" | ./utils/regex-compiler

gcagta[-g]a[ct]gaaa[gt]c[cg][-a]atc

gcagtag?a[ct]gaaa[gt]c[cg]a?atc

./utils/normalize-fasta sequenze | grep -E -c "gcagtag?a[ct]gaaa[gt]c[cg]a?atc" # 38

============================================================

# 1.3 ggaaatctcgttccgtatcg

ggaaatctcgttccgtatcg    37
ataaattcgtgcgtatcg      1
ggaaacgtctttcctgtagtcc  1
ggaaatccgatgctttcg      1
ggaaatgctcgatggtgtg     1
ggaaatgttattcctacg      1
ggaaatgtttttcctgttg     2
ggaagtcatcgaacagatcg    2
ggacattcgtcctacg        23
ggataatctggttctgccatcg  1
ggatgatctcttcatcg       1

# 2.3
ggaaatctcgttccgtatcg
ggacatt-cgt-cc-ta-cg
--------------------
gga[ac]at[ct]t?cgtt?ccg?tat?cg # 38

============================================================

# 1.4 ccccgcagttactggattaa

accagcagttgcgaataa      1
cacctctgttacggtaattaa   1
ccccgcagttactggattaa    37
ccccggtgattactgatac     2
cccttcagacgtattaa       2
ccgcgcagatacagcaataa    2
ctccgcagacctgtattgaa    1
ctccggttgccggatcaa      1
tccggcatgtacaggattca    2

# 2.4
ccccgcag-ttactggattaa
ccccggtgattactg-at-ac

ccccg[cg][at]ga?ttactgg?att?a[ac] # 39

============================================================

# 1.5 cgaaacagcagaagtgagg
                                                note the distance
                                                         v
./utils/normalize-fasta ../sequenze | tre-agrep --color -5 -c cgaaacagcagaagtgagg # 48

cgaaaacagcagttaatgagg   1
cgaaacagcagaagtgagg     37
cgaaccggccagacggagg     2
cgatactgctgaaggagg      1
cgattcgcaggagtgagc      1
cgcaaaagcagaatgagc      5
cgcacacagaagagggg       1
cgtgaagcagaagaagagg     2
ctaaacagcatggacaggagg   1

# 2.5
cgaaacagcagaagtgagg
cgcaaaagcagaa-tgagc

cg[ac]aa[ac]agcagaag?tgag[cg] # 42

============================================================

# 1.6 agcagtagacgaaatcgaatc

agcagacagcaatgaatg      2
agcagagacaatgaaac       2
agcaggcgacgatattaatc    1
agcagtagacgaaatcgaatc   37
agcagttgcgaataatc       1
agcagtttgatgaaatcaata   1
agcgtaccgaaaacgac       1
agcgttgcaaatgatc        1
atcgtcgacaaaatcgagtatc  4
ctcagcagagaaagcggatc    1

# 2.6
agcagtagacgaaatcgaatc??
 atcgtcgacaaaatcgagtatc

find the last two char (??)

./utils/normalize-fasta ../sequenze | grep -o "agcagtagacgaaatcgaatc.." | sort | uniq

agcagtagacgaaatcgaatcaa
agcagtagacgaaatcgaatcga
 atcgtcgacaaaatcgagtatc

[ag][ct][ac]gt[ac]gac[ag]aaatcga[ag]t[ac][agt][ac] # 41

============================================================

# 1.7 aagcagtagacgaaatcgaatc

aacaggcgacgatattaatc    1
aacagtattccataaacgaatc  3
aagcagtagacgaaatcgaatc  37
aaggaggaggtgaaacgcatc   1
actcagcagagaaagcggatc   1
aggcatagctgaaatcaacatc  2
cagcagttgcgaataatc      1
gagcaggcgacgatattaatc   1
tagcagagacaatgaaac      2

# 2.7
aagcagtagacga-aatcgaatc
aa-cagtattccataaacgaatc

aag?cagta[gt][at]c[cg]at?aa[at]cgaatc # 40

